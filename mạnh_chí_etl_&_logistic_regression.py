# -*- coding: utf-8 -*-
"""Mạnh Chí_ETL & Logistic Regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VF2Q6y4vXLfzJwSap0n6l4GoN8s-qd92
"""

import pandas as pd

"""# **1. Extract Data**

We have different part of data stored in defferent sources

## 1.1. Enrollies' data
"""

gg_sheet_id = "1VCkHwBjJGRJ21asd9pxW4_0z2PWuKhbLR3gUHm-p4GI"
url = "https://docs.google.com/spreadsheets/d/" + gg_sheet_id + "/export?format=xlsx"
df_enrollies = pd.read_excel(url, sheet_name="enrollies")

df_enrollies.head()

"""## 1.2. Enrollies' Education"""

df_enrollies_education = pd.read_excel("enrollies_education.xlsx")

df_enrollies_education.head()

"""## 1.3. Enrollies' working experience"""

df_enrollies_working_experience = pd.read_csv("https://assets.swisscoding.edu.vn/company_course/work_experience.csv")

df_enrollies_working_experience.head()



"""## 1.4. Training hours"""

! pip install pymysql

from sqlalchemy import create_engine
import pymysql

db_connection = "mysql+pymysql://etl_practice:550814@112.213.86.31:3360/company_course"
engine = create_engine(db_connection)
df_training_hours = pd.read_sql("training_hours", con = engine)

df_training_hours.head()

"""## 1.5. City development index"""

tables = pd.read_html("https://sca-programming-school.github.io/city_development_index/index.html")
df_city_development_index = tables[0]

df_city_development_index.head()

"""## 1.6 Employment"""

df_employment = pd.read_sql("SELECT * FROM employment", con = engine)

df_employment.head()



"""# **2. Transfrom data**

## 2.1. Enrollies' data
"""

df_enrollies.info()

"""Handing Column Type"""

df_enrollies.convert_dtypes().info()

"""Handing Missing Value"""

gender_mode = df_enrollies["gender"].mode()[0]
df_enrollies["gender"].fillna(gender_mode, inplace=True)

"""## 2.2. Enrollies' Education"""

df_enrollies_education.sample(10)

df_enrollies_education.info()

"""Handing Column Type"""

df_enrollies_education.loc[df_enrollies_education["enrolled_university"] == "no_enrollment", "enrolled_university"] = "No enrollment"

list_cate_cols = ["enrolled_university", "education_level", "major_discipline"]
df_enrollies_education[list_cate_cols] = df_enrollies_education[list_cate_cols].astype("category")

df_enrollies_education.info()

"""Handing Missing Value"""

df_enrollies_education["education_level"] = df_enrollies_education["education_level"].fillna("missing")
df_enrollies_education["enrolled_university"] = df_enrollies_education["enrolled_university"].fillna("missing")
df_enrollies_education["major_discipline"] = df_enrollies_education["major_discipline"].fillna("missing")

df_enrollies_education.info()

"""## 2.3. Enrollies' working experience"""

df_enrollies_working_experience.sample(10)

df_enrollies_working_experience.info()

df_enrollies_working_experience.loc[df_enrollies_working_experience["company_size"] == "10/49", "company_size"] = "10-49"

df_enrollies_working_experience['experience'] = df_enrollies_working_experience['experience'].fillna(df_enrollies_working_experience['experience'].mode()[0]).astype("category")

df_enrollies_working_experience['company_size'] = df_enrollies_working_experience['company_size'].fillna("missing").astype("category")
df_enrollies_working_experience['company_type'] = df_enrollies_working_experience['company_type'].fillna("missing").astype("category")
df_enrollies_working_experience['last_new_job'] = df_enrollies_working_experience['last_new_job'].fillna("missing").astype("category")

df_enrollies_working_experience['relevent_experience'] = df_enrollies_working_experience['relevent_experience'].astype("category")

df_enrollies_working_experience.info()

"""## 2.4. Training hours"""

df_training_hours.info()

"""## 2.5. City development index"""

df_city_development_index.info()

df_city_development_index.rename(columns={"City Development Index": "City_Development_Index"}, inplace=True)

df_city_development_index.info()

"""## 2.6 Employment"""

df_employment.info()



"""# **3. Load data**"""

db = "datawarehouse.db"

engine = ""

df_enrollies.to_sql("enrollies", con = engine, if_exists="replace", index = False)
df_enrollies_education.to_sql("enrollies_education", con = engine, if_exists="replace", index = False)
df_enrollies_working_experience.to_sql("enrollies_working_experience", con = engine, if_exists="replace", index = False)
df_training_hours.to_sql("training_hours", con = engine, if_exists="replace", index = False)
df_employment.to_sql("employee", con = engine, if_exists="replace", index = False)
df_city_development_index.to_sql("city_development", con = engine, if_exists="replace", index = False)

